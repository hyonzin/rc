#================================
# hyonzin updated 2022-12-05
#================================

source ~/.git-completion.sh 2> /dev/null
#source ~/.kubectl-completion.sh 2> /dev/null

alias l='ls -CF'
alias la='ls -A'
alias ll='ls -alF'
alias lh='ls -alFh'
alias tf="tail -F"
alias ta="tmux attach"

alias k='kubectl'
alias kgp='kubectl get po'
function ksh {
    kubectl exec -it $(kubectl get po | grep Running | grep $1 | awk '{print($1)}') bash
}
function ksh_main {
    kubectl exec -it $(kubectl get po | grep Running | grep $1 | awk '{print($1)}') -c main bash
}
complete -o default -F __start_kubectl k

# Git custom
git config --global alias.cm 'commit -m'
git config --global alias.ca 'commit --amend'

# Set custom prompts
export BASH_SILENCE_DEPRECATION_WARNING=1
export PS1="\e[0;32m\w\e[m\e[0;33m\$(parse_git_branch)\e[1;49;34m\$(parse_k8s_cluster_namespace)\e[m\n\u@\h$ "
# Set CLICOLOR if you want Ansi Colors in iTerm2
export CLICOLOR=1
# Set colors to match iTerm2 Terminal Colors
export TERM=xterm-256color

#for gcc, g++ on Mac
export PATH=/usr/local/Cellar/gcc/10.2.0_3/bin/:$PATH

export PATH=$PATH:$HOME/Library/Python/3.8/bin
export PATH=$HOME/local/bin:$HOME/.bin:/usr/local/bin:$PATH
export LD_LIBRARY_PATH=$HOME/local/lib:$LD_LIBRARY_PATH

#for homebrew
eval "$(/opt/homebrew/bin/brew shellenv 2>/dev/null)" 2>/dev/null

parse_git_branch() {
	git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

parse_k8s_cluster_namespace() {
    ctx=$(cat ~/.kube/config 2> /dev/null | grep "current-context" | awk '{print ($2)}')
    if [ ${ctx} ]; then
    	cat ~/.kube/config 2> /dev/null | awk -v ctx=${ctx} -v cluster=${ctx##*/} '{ \
    			if (!ns && $1 == "cluster:" && $2 == ctx){ ns = $2; flag = 1; } \
    			else if (flag == 1 && $1 == "namespace:"){ ns = $2; exit; } \
    			else if (flag == 1 && $1 == "user:"){ ns = "-"; exit; } \
    		} END { \
    			if (ns){ printf(" ["ns", "cluster"]"); } \
    		}'
    fi
}

function slack_msg {
    SLACK_URL=""
	printf "{\"text\": \"$*\"}" > ${HOME}/.tmp.slack.msg
	curl -X POST -H 'Content-type: application/json' --data @${HOME}/.tmp.slack.msg ${SLACK_URL}
	rm -f ${HOME}/.tmp.slack.msg
}

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('${HOME}/local/anaconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "${HOME}/local/anaconda3/etc/profile.d/conda.sh" ]; then
        . "${HOME}/local/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="${HOME}/local/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
# check auto_actavate_base: false
cat ~/.condarc 2> /dev/null | grep "auto_activate_base: false" 1> /dev/null
if [ $? != 0 ]; then
	conda config --set auto_activate_base false 2> /dev/null
	echo "auto_activate_base: false" > ~/.condarc
fi

conda deactivate 2> /dev/null
conda activate py38 2> /dev/null

#don't make .DS_Store
defaults write com.apple.desktopservices DSDontWriteNetworkStores true 2> /dev/null
